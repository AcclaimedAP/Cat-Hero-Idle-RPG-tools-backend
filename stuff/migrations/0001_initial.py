# Generated by Django 4.2.10 on 2024-02-25 21:29

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="RuneType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, unique=True)),
                (
                    "values_required",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=list,
                        size=None,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Type",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("uncommon", "Uncommon"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                            ("mythic", "Mythic"),
                        ],
                        max_length=10,
                    ),
                ),
                ("description", models.TextField(max_length=500)),
                ("cooldown", models.FloatField()),
                ("types", models.ManyToManyField(to="stuff.type")),
            ],
        ),
        migrations.CreateModel(
            name="Rune",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("uncommon", "Uncommon"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                            ("mythic", "Mythic"),
                        ],
                        max_length=10,
                    ),
                ),
                ("description", models.TextField(max_length=200)),
                (
                    "values",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="runes",
                        to="stuff.runetype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Companion",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("uncommon", "Uncommon"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                            ("mythic", "Mythic"),
                        ],
                        max_length=10,
                    ),
                ),
                ("base_mp", models.IntegerField()),
                ("types", models.ManyToManyField(to="stuff.type")),
            ],
        ),
    ]
